<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Campus Cart</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.15/dist/tailwind.min.css" rel="stylesheet" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link rel="stylesheet" href="./output.css">
  <style>
    /* Background: professional gradient */
    body {
      background: linear-gradient(135deg, #f8fafc, #e2e8f0);
    }

    /* Custom styles to make dropdown above content */
    #navbarMenu {
      z-index: 9999;
      position: absolute;
      top: 80px;
      /* Adjust based on the height of your header */
      left: 0;
      width: 100%;
    }

    .p-4 {
      padding: auto;
    }

    .imgclass {
      height: 30%;
      width: 70%;
    }

    @media only screen and (max-width: 768px) {
      .imgclass {
        height: 6rem;
        width: 10rem;
      }
    }

    /* Hide title on small screens but keep logo */
    @media only screen and (max-width: 500px) {
      #logo-title {
        display: none;
      }

      #logo-icon {
        width: 40px;
        /* Resize logo icon on small screens */
      }

      #hamburger-menu {
        display: block;
      }

      .p-4 {
        padding: 1.5rem !important;
      }
    }

    /* Adding some colorful styles for links and buttons */
    a:hover,
    button:hover {
      filter: brightness(0.9);
      transition: all 0.2s ease-in-out;
    }

    .container a:hover {
      filter: none;
    }

    .container a {
      text-decoration: none;
    }

    /* Enhance header with a subtle shadow and border color */
    header {
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      border-bottom: 1px solid #e2e8f0;
    }
  </style>
</head>

<body>
  <header class="text-gray-600 body-font fixed w-full bg-white" style="top: 0;">
    <div class="container mx-auto flex flex-wrap p-5 flex-row items-center justify-between">

      <!-- Logo (Icon + Title) -->
      <a id="logo-title" class="flex title-font font-medium items-center text-gray-900 mb-4 md:mb-0">
        <svg id="logo-icon" xmlns="http://www.w3.org/2000/svg" fill="none" stroke="currentColor" stroke-linecap="round"
          stroke-linejoin="round" stroke-width="2" class="w-10 h-10 text-white p-2 bg-indigo-500 rounded-full"
          viewBox="0 0 24 24">
          <path d="M12 2L2 7l10 5 10-5-10-5zM2 17l10 5 10-5M2 12l10 5 10-5"></path>
        </svg>
        <span class="ml-3 text-xl hidden md:inline">Campus Cart</span>
      </a>

      <!-- Hamburger Menu Icon (Visible only on small screens) -->
      <button id="hamburger-menu"
        class="lg:hidden inline-flex items-center bg-gray-100 p-2 rounded-md text-gray-500 hover:text-gray-900 hover:bg-gray-200">
        <svg class="w-6 h-6" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"
          stroke-width="2" viewBox="0 0 24 24">
          <path d="M4 6h16M4 12h16M4 18h16" />
        </svg>
      </button>

      <!-- Search Bar (Toggle on Mobile) -->
      <div id="search-bar-container" class="hidden lg:block relative w-[30%] md:w-[40%]" style="width: 40%;">
        <input type="search" id="default-search"
          class="block w-full p-4 pl-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500"
          placeholder="Search here" />
        <button type="submit"
          class="absolute right-2.5 bottom-2.5 text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-4 py-2">
          Search
        </button>
      </div>

      <!-- Navigation Links (Desktop) -->
      <div class="hidden lg:flex space-x-4 items-center">
        <!-- Sell Button -->
        <button id="sellbutton" action="/sellitem"
          class="inline-flex items-center bg-gray-100 border-0 py-1 px-3 focus:outline-none hover:bg-gray-200 rounded text-base">
          <svg fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
            class="w-4 h-4 ml-1" viewBox="0 0 24 24">
            <path d="M5 12h14M12 5l7 7-7 7"></path>
          </svg>&nbsp;Sell
        </button>

        <!-- Profile Icon -->
        <button
          class="inline-flex items-center bg-gray-100 border-0 py-1 px-3 focus:outline-none hover:bg-gray-200 rounded text-base">
          <svg fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
            class="w-4 h-4 ml-1" viewBox="0 0 24 24">
            <path
              d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z">
            </path>
          </svg>&nbsp;Profile
        </button>
      </div>
    </div>

    <!-- Collapsible Menu (Mobile) -->
    <div id="navbarMenu" class="lg:hidden hidden flex-col items-center w-full mt-4 bg-white border-t border-gray-200">
      <button id="sellbutton" action="/sellitem"
        class="w-full text-center bg-gray-100 border-0 py-2 px-4 focus:outline-none hover:bg-gray-200 rounded text-base">
        Sell
      </button>
      <button
        class="w-full text-center bg-gray-100 border-0 py-2 px-4 focus:outline-none hover:bg-gray-200 rounded text-base">
        Profile
      </button>
      <!-- Mobile Search Icon -->
      <button id="search-toggle"
        class="w-full text-center bg-gray-100 border-0 py-2 px-4 focus:outline-none hover:bg-gray-200 rounded text-base">
        Search
      </button>
    </div>
  </header>

  <section class="text-gray-600 body-font">
    <div class="container mx-auto mt-10">
      <h1 class="text-3xl font-bold text-center">Campus Cart</h1>

      <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mt-[2.5rem]" style="margin-top: 8rem;">
        <% items.forEach(item=> { %>
          <div class="bg-white p-4 rounded-lg shadow-md" style="cursor: pointer;">
            <a href="#">
              <%= console.log(item.item_photo) %>
                <!-- <%= JSON.stringify(item) %> -->
                <img src="/uploads/<%= item.item_photo.split('\\').pop() %>" alt="<%= item.item_name %>"
                  class="w-full h-40 object-cover rounded-md">
                <h2 class="text-xl font-semibold mt-2">
                  <%= item.item_name %>
                </h2>
                <p class="text-gray-700">
                  <%= item.item_desc %>
                </p>
                <p class="text-green-600 font-bold">â‚¹<%= item.item_price %>
                </p>
                <p class="text-gray-500">Category: <%= item.item_category %>
                </p>
                <p class="text-sm text-gray-400">Posted by: <%= item.postedby ? item.postedby.username : "Unknown" %>
                </p>
            </a>
          </div>
          <% }) %>
      </div>
    </div>

  </section>

  <!-- Bootstrap JS -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.min.js"></script>

  <script>
    document.addEventListener("DOMContentLoaded", function () {
      // Toggle the menu on mobile
      const hamburgerMenu = document.getElementById('hamburger-menu');
      const navbarMenu = document.getElementById('navbarMenu');

      hamburgerMenu.addEventListener('click', () => {
        navbarMenu.classList.toggle('hidden');
      });

      // Toggle search bar visibility on mobile
      const searchToggle = document.getElementById('search-toggle');
      const searchBarContainer = document.getElementById('search-bar-container');

      searchToggle.addEventListener('click', () => {
        searchBarContainer.classList.toggle('hidden');
      });


      document.querySelector("#sellbutton").addEventListener('click', function (event) {
        event.preventDefault(); // Prevent default behavior if in a form

        const sendreq = async () => {
          await fetch("/sellitem", {
            method: "POST",
            headers: {
              "Content-Type": "application/json", // Ensure correct content type for JSON
            },
            body: JSON.stringify({ /* Add any data you need to send */ })
          })
            .then((response) => {
              if (!response.ok) {
                throw new Error("Server error");
              }
              return response.json(); // Or response.json() if the response is JSON
            })
            .then((data) => {
              // console.log(data); // Handle the response from the server
              window.location.href = data.redirectUrl;
            })
            .catch((error) => {
              console.error("Error:", error); // Log errors
            });
        };

        sendreq(); // Call the function to send the request
      });
    });
  </script>
</body>

</html>